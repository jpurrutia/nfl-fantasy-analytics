-- Migration 003: Add NGS and Snap Count Tables, Restructure Opportunity
-- Date: 2025-01-17
-- Description: Add raw data tables for NGS and snap counts to bronze layer,
--              move player_opportunity to silver layer as calculated metric

-- ============================================================================
-- PART 1: Clean up duplicate/empty tables from schema recreation
-- ============================================================================

-- Drop empty tables that were recreated by mistake
DROP TABLE IF EXISTS bronze.players;
DROP TABLE IF EXISTS bronze.player_performance;
DROP TABLE IF EXISTS bronze.player_opportunity;
DROP TABLE IF EXISTS bronze.player_mapping;

-- Drop the empty opportunity table (moving to silver)
DROP TABLE IF EXISTS bronze.nfl_player_opportunity;

-- ============================================================================
-- PART 2: Create new bronze layer tables for raw data
-- ============================================================================

-- Snap count data from nfl-data-py
CREATE TABLE IF NOT EXISTS bronze.nfl_snap_counts (
    game_id VARCHAR NOT NULL,
    pfr_game_id VARCHAR,
    season INTEGER NOT NULL,
    game_type VARCHAR,
    week INTEGER NOT NULL,
    player VARCHAR NOT NULL,
    pfr_player_id VARCHAR,
    position VARCHAR,
    team VARCHAR,
    opponent VARCHAR,
    offense_snaps DOUBLE,
    offense_pct DOUBLE,
    defense_snaps DOUBLE,
    defense_pct DOUBLE,
    st_snaps DOUBLE,
    st_pct DOUBLE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (game_id, player)
);

-- NGS Passing data (QB metrics)
CREATE TABLE IF NOT EXISTS bronze.nfl_ngs_passing (
    season INTEGER NOT NULL,
    season_type VARCHAR,
    week INTEGER NOT NULL,
    player_display_name VARCHAR NOT NULL,
    player_position VARCHAR,
    team_abbr VARCHAR,
    -- Time and pressure metrics
    avg_time_to_throw DOUBLE,
    avg_completed_air_yards DOUBLE,
    avg_intended_air_yards DOUBLE,
    avg_air_yards_differential DOUBLE,
    aggressiveness DOUBLE,
    max_completed_air_distance DOUBLE,
    -- Performance metrics
    attempts INTEGER,
    completions INTEGER,
    completion_percentage DOUBLE,
    pass_yards INTEGER,
    pass_touchdowns INTEGER,
    interceptions INTEGER,
    passer_rating DOUBLE,
    -- Expected metrics
    expected_completion_percentage DOUBLE,
    completion_percentage_above_expectation DOUBLE,
    avg_air_distance DOUBLE,
    max_air_distance DOUBLE,
    -- Player identifiers
    player_gsis_id VARCHAR,
    player_first_name VARCHAR,
    player_last_name VARCHAR,
    player_jersey_number INTEGER,
    player_short_name VARCHAR,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (season, week, player_gsis_id)
);

-- NGS Rushing data (RB metrics)
CREATE TABLE IF NOT EXISTS bronze.nfl_ngs_rushing (
    season INTEGER NOT NULL,
    season_type VARCHAR,
    week INTEGER NOT NULL,
    player_display_name VARCHAR NOT NULL,
    player_position VARCHAR,
    team_abbr VARCHAR,
    -- Efficiency metrics
    efficiency DOUBLE,
    percent_attempts_gte_eight_defenders DOUBLE,
    avg_time_to_los DOUBLE,
    expected_rush_yards DOUBLE,
    rush_yards_over_expected DOUBLE,
    rush_yards_over_expected_per_att DOUBLE,
    rush_pct_over_expected DOUBLE,
    -- Performance metrics
    rush_attempts INTEGER,
    rush_yards INTEGER,
    avg_rush_yards DOUBLE,
    rush_touchdowns INTEGER,
    -- Player identifiers
    player_gsis_id VARCHAR,
    player_first_name VARCHAR,
    player_last_name VARCHAR,
    player_jersey_number INTEGER,
    player_short_name VARCHAR,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (season, week, player_gsis_id)
);

-- NGS Receiving data (WR/TE metrics)
CREATE TABLE IF NOT EXISTS bronze.nfl_ngs_receiving (
    season INTEGER NOT NULL,
    season_type VARCHAR,
    week INTEGER NOT NULL,
    player_display_name VARCHAR NOT NULL,
    player_position VARCHAR,
    team_abbr VARCHAR,
    -- Separation and coverage metrics
    avg_cushion DOUBLE,
    avg_separation DOUBLE,
    avg_intended_air_yards DOUBLE,
    percent_share_of_intended_air_yards DOUBLE,
    -- Performance metrics
    receptions INTEGER,
    targets INTEGER,
    catch_percentage DOUBLE,
    yards INTEGER,
    rec_touchdowns INTEGER,
    -- YAC metrics
    avg_yac DOUBLE,
    avg_expected_yac DOUBLE,
    avg_yac_above_expectation DOUBLE,
    -- Player identifiers
    player_gsis_id VARCHAR,
    player_first_name VARCHAR,
    player_last_name VARCHAR,
    player_jersey_number INTEGER,
    player_short_name VARCHAR,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (season, week, player_gsis_id)
);

-- ============================================================================
-- PART 3: Create silver layer calculated tables
-- ============================================================================

-- Player opportunity metrics (calculated from bronze layer)
CREATE TABLE IF NOT EXISTS silver.player_opportunity (
    player_id VARCHAR NOT NULL,
    week INTEGER NOT NULL,
    season INTEGER NOT NULL,
    -- Snap data (from bronze.nfl_snap_counts)
    snap_count INTEGER,
    snap_pct DECIMAL(5,2),
    -- Target/carry data (from bronze.nfl_play_by_play aggregation)
    targets INTEGER,
    target_share DECIMAL(5,2),
    carries INTEGER,
    carry_share DECIMAL(5,2),
    -- Red zone data (from bronze.nfl_play_by_play aggregation)
    rz_touches INTEGER,
    rz_share DECIMAL(5,2),
    rz_targets INTEGER,
    rz_carries INTEGER,
    -- Route data (from bronze.nfl_ngs_receiving + play_by_play)
    routes_run INTEGER,
    route_participation DECIMAL(5,2),
    -- QB specific (from bronze.nfl_play_by_play aggregation)
    pass_attempts INTEGER,
    dropbacks INTEGER,
    time_to_throw DOUBLE,
    -- RB specific (from bronze.nfl_ngs_rushing)
    stacked_box_rate DECIMAL(5,2),
    light_box_rate DECIMAL(5,2),
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (player_id, season, week)
);

-- ============================================================================
-- PART 4: Create indexes for performance
-- ============================================================================

-- Snap counts indexes
CREATE INDEX IF NOT EXISTS idx_snap_counts_player ON bronze.nfl_snap_counts(player);
CREATE INDEX IF NOT EXISTS idx_snap_counts_season_week ON bronze.nfl_snap_counts(season, week);
CREATE INDEX IF NOT EXISTS idx_snap_counts_team ON bronze.nfl_snap_counts(team);

-- NGS passing indexes
CREATE INDEX IF NOT EXISTS idx_ngs_passing_player ON bronze.nfl_ngs_passing(player_display_name);
CREATE INDEX IF NOT EXISTS idx_ngs_passing_season_week ON bronze.nfl_ngs_passing(season, week);

-- NGS rushing indexes
CREATE INDEX IF NOT EXISTS idx_ngs_rushing_player ON bronze.nfl_ngs_rushing(player_display_name);
CREATE INDEX IF NOT EXISTS idx_ngs_rushing_season_week ON bronze.nfl_ngs_rushing(season, week);

-- NGS receiving indexes
CREATE INDEX IF NOT EXISTS idx_ngs_receiving_player ON bronze.nfl_ngs_receiving(player_display_name);
CREATE INDEX IF NOT EXISTS idx_ngs_receiving_season_week ON bronze.nfl_ngs_receiving(season, week);

-- Player opportunity indexes
CREATE INDEX IF NOT EXISTS idx_player_opp_player ON silver.player_opportunity(player_id);
CREATE INDEX IF NOT EXISTS idx_player_opp_season_week ON silver.player_opportunity(season, week);

-- ============================================================================
-- PART 5: Rename player_id_mapping for consistency
-- ============================================================================

-- Create new table with consistent naming
CREATE TABLE IF NOT EXISTS bronze.nfl_player_mapping AS 
SELECT * FROM bronze.player_id_mapping;

-- Drop old table
DROP TABLE IF EXISTS bronze.player_id_mapping;

-- ============================================================================
-- PART 6: Document migration
-- ============================================================================

-- Migration complete: 
-- - Added 4 new bronze tables for raw NGS and snap data
-- - Created silver.player_opportunity for calculated metrics
-- - Cleaned up duplicate/empty tables
-- - Renamed player_id_mapping to nfl_player_mapping for consistency